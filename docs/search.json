[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 RetakeExamF authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/README.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Maze App","text":"","code":"#devtools::install_github(\"ptds2022/groupf/RetakeExamF\") # to edit library(RetakeExamF)  #call the package"},{"path":"/articles/README.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Maze App","text":"RetakeExamF dynamic R package empowers users craft captivating mazes using Depth-First Search (DFS) algorithm. Seamlessly merging educational insights creative possibilities, package provides user-friendly platform generate mazes varying complexities. integrating “igraph” package, creation networks composed edges vertices, improve flexibility customization maze designs. “ggplot2” package elevates maze-building experience enabling users visualize mazes aesthetically pleasing layouts.","code":""},{"path":[]},{"path":"/articles/README.html","id":"make-a-graph","dir":"Articles","previous_headings":"Steps to follow to get a maze","what":"1) Make a graph","title":"Maze App","text":"Define number rows cols give dimension graph assign name.","code":""},{"path":"/articles/README.html","id":"use-dfs-method","dir":"Articles","previous_headings":"Steps to follow to get a maze","what":"2) Use DFS method","title":"Maze App","text":"Add name_graph function create maze DFS.","code":""},{"path":"/articles/README.html","id":"plot-the-graph","dir":"Articles","previous_headings":"Steps to follow to get a maze","what":"3) Plot the graph","title":"Maze App","text":"Plot name_graph. can glimpse final output package offers : nice example also possible display solution path existing maze : Finally package compatible Shiny.","code":"Example_maze <- RetakeExamF::myGraph (nrows = 10,ncols = 10)  Example_maze <- RetakeExamF::dfs_method (GraphMade = Example_maze) RetakeExamF::plotmyMaze(Example_maze,nrows= 10,ncols = 10) RetakeExamF::myMazeShinyApp() # shiny app experience"},{"path":"/articles/README.html","id":"additional-resources---annexe","dir":"Articles","previous_headings":"","what":"Additional resources - (annexe)","title":"Maze App","text":"can find information DFS algorithm build maze : https://www.algosome.com/articles/maze-generation-depth-first.html https://www.geeksforgeeks.org/random-acyclic-maze-generator--given-entry--exit-point/ https://github.com/Vessy/Rmaze/tree/master Please, know different functions included igraph ggplot2 packages, refer resources : https://r.igraph.org/ https://ggplot2.tidyverse.org/","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Edward Tandia. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Edward Tandia (2023). RetakeExamF: package generating mazes. R package version 0.1.0, https://github.com/Ed-sctt/Maze_repository.","code":"@Manual{,   title = {RetakeExamF: A package for generating mazes},   author = {{Edward Tandia}},   year = {2023},   note = {R package version 0.1.0},   url = {https://github.com/Ed-sctt/Maze_repository}, }"},{"path":"/reference/dfs_method.html","id":null,"dir":"Reference","previous_headings":"","what":"dfs_method function — dfs_method","title":"dfs_method function — dfs_method","text":"Generate maze using randomized adaptation depth-first search (DFS) algorithm","code":""},{"path":"/reference/dfs_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dfs_method function — dfs_method","text":"","code":"dfs_method(GraphMade = NA)"},{"path":"/reference/dfs_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dfs_method function — dfs_method","text":"GraphMade existing maze graph object. Value set NA","code":""},{"path":"/reference/dfs_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dfs_method function — dfs_method","text":"function returns maze built according dfs algorithm paths anf walls displayed.","code":""},{"path":"/reference/dfs_method.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dfs_method function — dfs_method","text":"Joost Edward","code":""},{"path":"/reference/dfs_method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dfs_method function — dfs_method","text":"","code":"Example_maze <- myGraph(nrows = 5,ncols = 9)  Example_maze <- dfs_method(GraphMade = Example_maze) plotmyMaze(Example_maze,nrows= 5,ncols = 5)"},{"path":"/reference/myGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"myGraph function — myGraph","title":"myGraph function — myGraph","text":"myGraph function","code":""},{"path":"/reference/myGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"myGraph function — myGraph","text":"","code":"myGraph(nrows = 0, ncols = 0)"},{"path":"/reference/myGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"myGraph function — myGraph","text":"nrows number rows, maze height value arbitrarly set 0. ncols number cols, maze weight value arbitrarly set 0.","code":""},{"path":"/reference/myGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"myGraph function — myGraph","text":"function returns undirected graph network nodes edges according nrows ncols defined","code":""},{"path":"/reference/myGraph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"myGraph function — myGraph","text":"function creates undirected network edges nodes.  elements translated 'walls' build maze.","code":""},{"path":"/reference/myGraph.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"myGraph function — myGraph","text":"Joost Edward","code":""},{"path":"/reference/myGraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"myGraph function — myGraph","text":"","code":"Example_maze <- myGraph (nrows = 5,ncols = 9)  Example_maze <- dfs_method (GraphMade = Example_maze) plotmyMaze(Example_maze,nrows= 5,ncols = 5)"},{"path":"/reference/myMazeShinyApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Building mazes app — myMazeShinyApp","title":"Building mazes app — myMazeShinyApp","text":"Building mazes app","code":""},{"path":"/reference/myMazeShinyApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Building mazes app — myMazeShinyApp","text":"","code":"myMazeShinyApp()"},{"path":"/reference/myMazeShinyApp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Building mazes app — myMazeShinyApp","text":"function returns shiny app possibility build maze see solution.","code":""},{"path":"/reference/myMazeShinyApp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Building mazes app — myMazeShinyApp","text":"According shiny settings, app offers user build maze selecting inputs weight, height, Depth First Search algorithm.","code":""},{"path":"/reference/myMazeShinyApp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Building mazes app — myMazeShinyApp","text":"Joost Edward","code":""},{"path":"/reference/myMazeShinyApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Building mazes app — myMazeShinyApp","text":"","code":"if (FALSE) myMazeShinyApp()"},{"path":"/reference/plotmyMaze.html","id":null,"dir":"Reference","previous_headings":"","what":"ploymyMaze function — plotmyMaze","title":"ploymyMaze function — plotmyMaze","text":"ploymyMaze function","code":""},{"path":"/reference/plotmyMaze.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ploymyMaze function — plotmyMaze","text":"GraphMade existing graph nrows number rows, maze height value arbitrarly set 0. ncols number cols, maze weight value arbitrarly set 0.","code":""},{"path":"/reference/plotmyMaze.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ploymyMaze function — plotmyMaze","text":"function returns plot existing maze 2D.","code":""},{"path":"/reference/plotmyMaze.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ploymyMaze function — plotmyMaze","text":"function transforms graph data frame  creates plot existing maze ggplot2 package.","code":""},{"path":"/reference/plotmyMaze.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ploymyMaze function — plotmyMaze","text":"Joost Edward","code":""},{"path":"/reference/plotmyMaze.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ploymyMaze function — plotmyMaze","text":"","code":"Example_maze <- myGraph (nrows = 5,ncols = 9)  Example_maze <- dfs_method (GraphMade = Example_maze) plotmyMaze(Example_maze,nrows= 5,ncols = 5)"},{"path":"/reference/solverGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"solverGraph function — solverGraph","title":"solverGraph function — solverGraph","text":"solverGraph function","code":""},{"path":"/reference/solverGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"solverGraph function — solverGraph","text":"","code":"solverGraph(GraphMade = NA, nrows = 0, ncols = 0)"},{"path":"/reference/solverGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"solverGraph function — solverGraph","text":"GraphMade existing graph nrows number rows, maze height value arbitrarly set 0. ncols number cols, maze weight value arbitrarly set 0.","code":""},{"path":"/reference/solverGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"solverGraph function — solverGraph","text":"function returns returns green path indicating solution maze.","code":""},{"path":"/reference/solverGraph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"solverGraph function — solverGraph","text":"function transforms graph data frame  creates plot existing maze ggplot2 package.","code":""},{"path":"/reference/solverGraph.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"solverGraph function — solverGraph","text":"Joost Edward","code":""},{"path":"/reference/solverGraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"solverGraph function — solverGraph","text":"","code":"Example_maze <- myGraph (nrows = 5,ncols = 9)  Example_maze <- dfs_method (GraphMade = Example_maze) solverGraph(Example_maze,nrows= 5,ncols = 5)"}]
